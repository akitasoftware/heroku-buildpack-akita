#!/usr/bin/env bash
# bin/compile BUILD_DIR CACHE_DIR ENV_DIR

set -euo pipefail

# Debug
set -x

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

BUILDPACK_DIR=$(cd "$(dirname "$0")"; cd ..; pwd)

# TODO(kku): store apt cache in CACHE_DIR

echo "Installing Akita CLI"

wget \
  -O akita_0.10.4_linux_amd64.zip \
  https://releases.akita.software/cli/0.10.4/akita_0.10.4_linux_amd64.zip

unzip akita_0.10.4_linux_amd64.zip
mkdir -p ${BUILD_DIR}/akita/bin
mv akita ${BUILD_DIR}/akita/bin/akita

# Add to .profile.d to automatically run at startup.
echo "Setting up Akita CLI in .profile.d"

mkdir -p "${BUILD_DIR}/.profile.d"

cat <<EOF > ${BUILD_DIR}/.profile.d/akita.sh
#!/usr/bin/env bash

export PATH=\${PATH}:\${HOME}/akita/bin

if [ -z "\${AKITA_API_KEY_ID}" ]; then
  echo "AKITA_API_KEY_ID environment variable not set"
  exit 1
fi

if [ -z "\${AKITA_API_KEY_SECRET}" ]; then
  echo "AKITA_API_KEY_SECRET environment variable not set"
  exit 1
fi

if [ -z "\${AKITA_SERVICE}" ]; then
  echo "AKITA_SERVICE environment variable not set"
  exit 1
fi

if [ -z "\${HEROKU_SLUG_COMMIT}" ]; then
  echo "Heroku Labs Dyno Metadata not enabled"
  exit 1
fi

echo "LS"
ls -l \${HOME}/akita
ls -l \${HOME}/akita/bin

echo "LS HOME"
ls -l \${HOME}

echo "PATH"
echo \$PATH

if [ -z "\${PORT}" ]; then
  sudo akita apidump \
    --out akita://\${AKITA_SERVICE}:trace:heroku-\${HEROKU_SLUG_COMMIT}
else
  sudo akita apidump \
    --out akita://\${AKITA_SERVICE}:trace:heroku-\${HEROKU_SLUG_COMMIT} \
    --filter "port \${PORT}"
fi
EOF

chmod +x "${BUILD_DIR}/.profile.d/akita.sh"
